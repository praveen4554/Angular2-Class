1. we need install node

2. npm install -g typescript

3. npm install -g angular-cli

4. ng new yourapplication name

5. ng serve it will runs our application on the port 4200

6. let and var

7. ng g component componentname

8. check app.module.ts

9. if it is not importing the component we manually add those components

10. import {component} form path;

11. @ngModule declartions {
    Headercomponet
}
12. for accesing for creating any component it cretes 4 files 1.html 2. .ts 3. spec 4. css

  .ts

  component 3 things 1. selctor  2.templateurl or template 3. css

13. selctor name we can call the componet in main componet

14. we are creating another component for another component we need to import our first componet
15. import {componet} from path;
16. we can call the first componet selctor in html




ng For and routing

ngFor is just like ngrepeat

it loops through an array


the declaration we are declaring by us and we are devloping the components

third party moduels formsmodule, http module router module BrowserModule


index.html we need write only one component 

index.html -- app component -- Headercomponet

i'm inplemneting routing 

dynamically loads views

in my main file in my related file 

load the views after Headercomponet
ng-views

router-outlet

home register login



@praveen


app.componet . header . load the dynamic views 

for dynamic views we are impleting router outlet

<button><a href="./home">Home</a></button>

localhost:4200/home

routerLink


*ngFor -- looping through an array in html

routing-- 

1.ROuterMoudle -- anguar-router
2.routermodule in our imports
3.we are defining our rootings like RouterModule,forRoot([{path: componet}])

4. we are defining where should our views load dynamically
  <router-outlet></router-outlet>

5. Headercomponet routerLink we are defing our views

Two way data binding 

ngModel and name 
restrict:
required:
scope:
template url

praveen

restrict:'E''
required: "name"

<praveen name=""></praveen>

browser doesn't allow nested forms


<form>
 <form>
 </form>
 <input type="submit">submit
</form>



FormModule

formgroupvalidator formbuilder

1. form for my registration 
2. Forms Module in app.module.ts--this main module
3. for form validations i need to use ReactiveFormsModule -- app.module.ts 
4. for modules we need to write the same module in imports section of app.module.ts
5. i need to import FormBuilder,FormGroup,Validators from angular/forms in my respective component i.e register.component 
6. on loading i would like import the object form builder i'm giving my form builder object in the register component
7. for my form i need name and also i need to register the name with my formgroup
8. registerForm:formgroup
9. in my constructor i need to add my form formbuilder group 
  this.registerForm=rb.group({
      'firstName':[null,Validators.required]
    })
10. i need to add my form name in my html like [formGroup]="registerForm"
11. i need to remove my custom html5 validation by using novalidate
12. i need to register my input tag with register form [formControl]="registerForm.controls['firstName']

!

&& we need both true

|| for any thing true it return true 

for that case what i need to check it is touched or not and valid input 

we have register form then we need to store the data in one service and send the dato to db

view-->component-->backend
after component --> Services the services interact with the backend

Service -- if you wan't share the data or common business logic that means reusable accross the application

@Injecatble .  


Services are injectable components we can inject services in any of the components 

componet or service we have simple role IDE -- import declare and export 

Syntax: import {Injectable} from '@angular/core';

@Injectable()

export class servicename{

}

ng g service servicename

for service

1. for creating service we are using ng g service servicename

2. we need to register our service in our application 

3. in my app.module i need to import my service and add my service into providers

4. in my register componet  i need to import my service

5. i am adding or calling service at the object creation of my component i.e we need to call the service in constructor

6. we are calling our method and assing the values to a variable 



we are like to call json file http module rxjs -- asynchronous data streams angular 1.x promise 

the promise success or failure depends on the server or net work provider the promise success or failue 



AJAX-- Asychronous javascript and XMl

synchoronus asychronous -- master-slave architecture 

toPromise()

http calls we use the observable-->

1.i need to import my http module in my app.module.ts and add into imports sections
2. i need to call the map function and promise so for that i need to import from rxjs in my app.module

3. in my service i'm gng to import Http method for calling get method

4. loading the object of http at the creation of my service in my constructor 


5. http.get(url).toPromise().then((response)=> response.json()).catch((error)=>error.json());

6. in our component im making the service as public 

7. i can call the method by using the promise and promise will return my result


date of birth 20-12-23t 00:12:2015 PST


pipes lower case to upper caser date format currency 


for generating custom pipes

1. ng g pipe pipename

2. i wcheck in my main file i.e app.module it is added or not if it is not added i'm importing and adding in declaration section

3. i'm applying my filter in html and i'm returning the data in pipes





parent and child 

input and output

@input-- parent to child

@output -- child to parent 


@Input is used to communicate from parent to child;

In your child compoent we are importing Input 

1. User component im Input it isn angular/core
   import { Component, OnInit, Input } from '@angular/core';

2. i need to create property for communicating 
   @Input PropertyName:type;
   @Input pageName:String;// property name is page name
3. i can display the page name in html {{pageName}} in my child html

4. i need to import my child component 
  import {compnentName} from path;
5. heading="Users";// for passing the value from parent to child

6. in my html i'm rendered my child componet using selector
  <app-user [pageName]="heading"></app-user>


  child to parent

  w need send a event the child will notify the parent 



suppose if i have 10 components 

i would like to communicate  1 to 2nd

8 components 

if i'm not importing the child componet


if the child compoent generates event 

the parent should listen the event 

ANgular2 is not impleting the feature of child component my 10 components 

1 to 10 compoennts the first component 1 to 2 

1 is my parent 
2 is my child


suppose if my child generates an event to whom to parent 

if i'm not impoting the 9 components should listen the event and verify in the 
class is der any function for the event 

for child to parent @Output 

  events child generates events to parents

  event.emit
  event.next


  we should to implement eventemitter for communication between child to parent


  parent--child -- @Input property i can communicate
  child--parent --


  1. in my child component i need to import 2 things
     1.Output
     2.eventemitter

  2. registering a property with event emiter in child
     @Output() updateDetails:eventemitter<any>=new eventemitter<any>()

  3. we are generating events in child
    this.updateDetails.emit("msg");

    in parent
   4. in my html i should implement an event like
      (updateDetails)="update($event)"

  4. in ts file i am impleting my function 

      update(event){
        
      }
  




























































































































